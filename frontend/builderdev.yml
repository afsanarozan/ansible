---
  - name: Build Docker
    hosts: dev-server
    vars_files:
      - vars.yml
    vars:
      - branch: "dev"
      

    tasks:
      - name: Check connection node
        become: true
        ping:
      
      - name: Install Docker
        become: true
        yum:
          name: docker
          state: present
      
      - name: Ensure docker is running
        become: true
        service:
          name: docker
          state: started
          enabled: yes
      
      - name: Add user to group Docker
        become: true
        user:
          name: ansman
          shell: /bin/bash
          groups: docker
          append: yes
          
      - name: "Ensure git installed"
        become: true
        yum:
          name: git
          state: present
      
      - name: "Clone Git Repository"
        git:
          repo: "{{repo}}"
          dest: "{{dests}}/{{proj}}"
          version: "{{branch}}"
          update: yes

      - name: Pull latest changes
        command: git pull origin {{branch}}
        args:
          chdir: "{{dests}}/{{proj}}"

      - name: Stop Docker Compose
        args:
          chdir: "{{dests}}/{{proj}}"
        command: docker-compose stop
        register: rm
        failed_when: rm.rc != 1 and rm.rc != 0

      - name: Remove Frontend Container
        command: docker rm frontend
        register: rm
        failed_when: rm.rc != 1 and rm.rc != 0

      - name: Remove image
        command: docker rmi {{hub}}/{{proj}}:{{branch}}
        register: rmi
        failed_when: rmi.rc != 1 and rmi.rc != 0 

      - name: "Build image Dev and Stag"
        args:
          chdir: "{{dests}}/{{proj}}"
        command: docker build -t {{hub}}/{{proj}}:{{branch}} .
        when: branch=="dev"
          
      
      - name: "Build image Prod"
        community.general.docker_image:
          name: "{{hub}}/{{proj}}:{{branch}}"
          build:
            path: "{{dests}}/{{proj}}"
          source: build
          state: present
        when: branch=="prod"
        
